{
  "packageManifest": {
    "snowpack": {
      "webDependencies": ["ramda"]
    },
    "scripts": {
      "prestart": "run-s -l clean:build ",
      "start": "run-p -l build:ts:watch build:styles:watch copy:assets:watch copy:modules:watch browsersync",
      "prebuild": "run-s -l clean:build",
      "build": "run-p -l build:dependencies build:ts build:styles copy:assets",
      "postbuild": "run-s -l copy:modules minify:all",
      "build:ts": "babel src --out-dir build --extensions \".ts\"",
      "build:ts:watch": "babel --watch src --out-dir build --extensions \".ts\"",
      "build:styles": "postcss src/styles/main.pcss -o build/styles.css --no-map",
      "build:styles:watch": "postcss src/styles/main.pcss -o build/styles.css -w",
      "build:dependencies": "snowpack --optimize --include \"src/**/*.ts\"",
      "type-check": "tsc",
      "type-check:watch": "tsc --watch",
      "lint:ts": "eslint src/**/*.ts",
      "lint:ts:fix": "eslint src/**/*.ts --fix",
      "test": "run-p -l type-check test:unit lint:ts",
      "test:unit": "jest",
      "test:unit:coverage": "jest --coverage",
      "copy:assets": "cpx \"public/*\"  build",
      "copy:assets:watch": "cpx \"public/*\"  build -w",
      "copy:modules": "cpx \"web_modules/*.js\" \"build/web_modules\"",
      "copy:modules:watch": "snowpack --include \"src/**/*.ts\" --clean && cpx \"web_modules/**/*.js\" \"build/web_modules\" -w",
      "minify:js": "node minify.js js",
      "minify:html": "node minify.js html",
      "minify:all": "node minify.js js html",
      "clean:build": "rimraf build",
      "browsersync": "browser-sync start -s \"build\" -f \"build\"",
      "commit": "git-cz"
    }
  },
  "commands": {
    "install": {
      "exec": "npm install --silent --save ramda"
    },
    "install -D": {
      "exec": "npm install --silent -D @babel/cli @babel/core @babel/helper-plugin-utils @babel/preset-typescript @types/jest @types/ramda @typescript-eslint/eslint-plugin @typescript-eslint/parser babel-plugin-add-import-extension browser-sync commitizen cpx cssnano cz-conventional-changelog eslint eslint-config-prettier eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-prettier eslint-plugin-promise eslint-plugin-standard filesize glob html-minifier jest normalize.css npm-run-all postcss-cli postcss-import postcss-nested postcss-simple-vars prettier rimraf snowpack terser ts-jest typescript"
    }
  }
}
